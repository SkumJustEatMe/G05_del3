@startuml
'https://plantuml.com/class-diagram
skinparam classAttributeIconSize 0

class Player{
- balance : int
- name : String
- position : int
+ changeBalance(int) : void
}
class Gamecontroller{
- indexOfCurrentPlayer : int
- currentDieRoll : int
- Player
- Die
- GameBoard
- ArrayList<Player>
- GUI
- initialize() : void
+ startGameLoop() : void
- rollDice() : void
- setNextPlayer() : void
- movePlayer() : void
- hasReachedStartField() : boolean
- evaluateFieldAndExecute() : void
+ executePropertyField(PropertyField, Player) : void
- executeEventField(EventField) : void
+ foundLoser(ArrayList<Player>) : boolean
- getMostWealthy : Player
- getNumberOfPlayers() : int
- getUserInputToBegin : void

}

class Die{
- MAX : int
- faceValue : int
+getFacevalue() : int
+roll() : int
+toString() : String
}
class GameBoard{
- Field[]
+ getIndexOfGoToJail() : int
+ getFieldList() : Field[]
}

class main{
{static}+ main()
}
class GUI{
- GUI
- Gamecontroller
- GameBoard
- GUI_Field[]
- ArrayList<GUI_Player>
- Color[]
- ArrayList<GUI_car>
+ createStartField(int) : void
+ createPropertyField(int, String, Color) : void
+ createChanceField(int) : void
+ createJailField(int) : void
+ createEmptyField(int) : void
+ populateFields() : void
+ addCarsToBoard() : void
+ addPlayersToBoard(int) : void
+ displayDieRoll(int) : void
+ moveCarToField(int) : void
+ displayPlayerBalance() : void
+ displayRollDiceButton(String) : String
+ displayPlayerSelectionButtons() : String
+ displayWinnerAndExit(Player) : void
+ refreshOwnership() void
}

abstract class ChanceCard{
RandomCardEffect
}

class MoveCard{}

class MoveToCard{}

class FreeFieldCard{}

class GiveCardCard{}

class RecieveOrPayCard{}

class GetOutOfJailCard{}


class Field{
- name : String
+ getName() : String
}

class PropertyField{
- value : int
- Color
- Player
+ getValue() : int
+ getOwner() : Player
+ setOwner(Player) : void
+ hasOwner() : boolean
}

class EventField{
- FieldEvent
+ getFieldEvent() : FieldEvent
}

enum FieldEvent{
Chance
GoToJail
}

Gamecontroller "1"--"1" GameBoard : evaluates
GUI"1" -- "1"Gamecontroller : sendsInformation
GameBoard "1" -- "24" Field : contains
Field "1" <|-- "1" EventField : isA
Field "1" <|-- "1" PropertyField : isA
ChanceCard "20" <|-- "4" MoveCard : isA
ChanceCard "20" <|-- "8" FreeFieldCard : isA
ChanceCard "20" <|-- "4" GiveCardCard : isA
ChanceCard "20" <|-- "3" RecieveOrPayCard : isA
ChanceCard "20" <|-- "1" GetOutOfJailCard : isA

@enduml